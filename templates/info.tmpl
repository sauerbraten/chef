{{define "title"}}More Information – CHEF{{end}}

{{define "content"}}
	<article class="text">
		<h2>What is collected?</h2>

		<p>
			This service stores information about what IP (using what name) was seen on which server. It stores IP, port, and description of every server on the master list plus some manually specified hidden servers. It stores all IPs it sees (first three octets), and all names it sees. It then stores an entry equivalent to “A player named XYZ was seen on server ABC at this date and time using the IP x.x.x.x”.
		</p>

		<h3>Exceptions</h3>

		<p>
			Some servers do not give the correct IP but instead send an IP like 0.0.0.0 or other, harder to recognize fake IPs. These servers are put on a ‘greylist’, which means that they will be scanned, but all IPs they send will be changed to 0.0.0.0 before saving them, and sightings from those servers will not be shown in 2-step name lookups.
		</p>

		{{if .KidbanConfigured}}
			<h2>Why are some IPs colored orange-red?</h2>

			<p>
				IPs that are colored orange-red have been found to lie in a range which is most likely used for things like businesses, VPNs, server hosting, proxies, and so on. For more information, check out <a href="https://github.com/pisto/ASkidban">pisto’s ASkidban project</a>. This web interface periodically downloads a list of compiled ‘kid’ network ranges (typically once every hour).
			</p>
		{{end}}

		<h2>API? JSON?</h2>

		<p>
			You can get JSON output by using the <code>/api</code> URL path. Example: <a href="/api/lookup?q=Obstriegel">http://chef.sauerworld.org/api/lookup?q=Obstriegel</a>
		</p>

		<h2>Source Code</h2>

		<p>
			The source code for this project can be found on GitHub: <a href="https://github.com/sauerbraten/chef">https://github.com/sauerbraten/chef</a>
		</p>
	</article>
{{end}}